{"version":3,"file":"5.705def780fd2fcf00c7f.hot-update.js","sources":["webpack:///containers/SettingForm.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport request from '../utilities/request';\nimport api from '../config/api';\n\nconst FormItem = Form.Item;\n\nclass HomeworkForm extends Component {\n  componentDidMount() {\n    this.getSetting();\n  }\n\n  getSetting = async () => {\n    const { form } = this.props;\n\n    const { statusCode, data } = await request.get(api.url.settings);\n    if (statusCode) {\n      data.map(item => {\n        const { meta_name, meta_value } = item;\n        form.setFieldsValue({\n          [meta_name]: meta_value\n        });\n      });\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (!err) {\n        console.log(values);\n        // for (let key in values) {\n        //   await request.update(api.url.settings, values);\n        // }\n        this.getSetting();\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 10 },\n      },\n    };\n\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 2,\n          offset: 14,\n        },\n        sm: {\n          span: 2,\n          offset: 5,\n        },\n      },\n    };\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem\n          {...formItemLayout}\n          label=\"Line Channel Access Token\"\n        >\n          {getFieldDecorator('channel_access_token', {\n            rules: [{\n              message: 'The input is not valid E-mail!',\n            }]\n          })(\n            <Input />\n          )}\n        </FormItem>\n        <FormItem\n          {...formItemLayout}\n          label=\"Group ID\"\n        >\n          {getFieldDecorator('groupID', {\n            rules: [{\n              message: 'The input is not valid E-mail!',\n            }],\n          })(\n            <Input />\n          )}\n        </FormItem>\n        <FormItem {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">Save</Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nexport default Form.create()(HomeworkForm);\n\n\n// WEBPACK FOOTER //\n// containers/SettingForm.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AASA;;;;;;AA7BA;AACA;AACA;;;AA6BA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AALA;AAWA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AADA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAKA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA1FA;AACA;AA4FA;;;;A","sourceRoot":""}