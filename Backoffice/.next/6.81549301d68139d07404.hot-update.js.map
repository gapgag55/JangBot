{"version":3,"file":"6.81549301d68139d07404.hot-update.js","sources":["webpack:///containers/NotifyForm.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Select, Button, Upload, Icon } from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass NotifyForm extends Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n  handleWebsiteChange = (value) => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 10 },\n      },\n    };\n\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 2,\n          offset: 14,\n        },\n        sm: {\n          span: 2,\n          offset: 4,\n        },\n      },\n    };\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem\n          {...formItemLayout}\n          label=\"ประเภทข้อความ\"\n        >\n          {getFieldDecorator('type', {\n            rules: [{ required: true, message: 'Please select your gender!' }],\n          })(\n            <Select\n              placeholder=\"Select a option and change input text above\"\n              onChange={this.handleSelectChange}\n            >\n              <Option value=\"text\">Text</Option>\n              <Option value=\"image\">Image</Option>\n            </Select>\n          )}\n        </FormItem>\n        <FormItem\n          {...formItemLayout}\n          label=\"ข้อความส่งถึง\"\n        >\n          {getFieldDecorator('subject', {\n            rules: [{\n              type: 'text', message: 'The input is not valid E-mail!',\n            }, {\n              required: true, message: 'Please input your E-mail!',\n            }],\n          })(\n            <Input.TextArea rows={10} />\n          )}\n        </FormItem>\n        <FormItem\n          {...formItemLayout}\n          label=\"Dragger\"\n        >\n          <div className=\"dropbox\">\n            {getFieldDecorator('dragger', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n            })(\n              <Upload.Dragger name=\"files\" action=\"/upload.do\">\n                <p className=\"ant-upload-drag-icon\">\n                  <Icon type=\"inbox\" />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n              </Upload.Dragger>\n            )}\n          </div>\n        </FormItem>\n        <FormItem {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">Push Message</Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nexport default Form.create()(NotifyForm);\n\n\n// WEBPACK FOOTER //\n// containers/NotifyForm.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;;;;;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AALA;AAWA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AADA;AAalIA;AACA;AAoIA;;;;A","sourceRoot":""}