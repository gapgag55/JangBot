{"version":3,"file":"5.98da5b9fb9df0232c531.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Layout, Form, notification } from 'antd';\nimport moment from 'moment';\nimport Wrapper from '../components/Wrapper';\nimport HomeworkForm from '../containers/HomeworkForm';\nimport TableItems from '../containers/TableItems';\nimport request from '../utilities/request';\nimport api from '../config/api';\n\nconst { Content } = Layout;\n\nclass Home extends Component {\n  state = {\n    isLoading: true,\n    isUpdate: false,\n    data: []\n  };\n\n  componentDidMount() {\n    this.getHomework();\n  }\n\n  addHomework = () => {\n    const { form } = this.props;\n    const self = this;\n\n    form.validateFieldsAndScroll(async (err, values) => {\n      form.resetFields();\n      if (!err) {\n        const { statusCode } = await request.post(api.url.homework, values);\n        const message = statusCode == 200 ? 'Send Message: Success' : 'Send Message: Fail';\n\n        notification.open({\n          message: message\n        });\n\n        self.getHomework();\n      }\n    });\n  }\n\n  updateHomework = () => {\n\n  }\n\n  getHomework = async () => {\n    this.setState({ isLoading: true });\n\n    const { statusCode, data } = await request.get(api.url.homework)\n    if (statusCode) {\n      const convertedData = data.map((item, key) => {\n        const {\n          _id,\n          subject,\n          description,\n          type,\n          due_date,\n          due_time,\n          appointment\n        } = item;\n\n        moment.locale('th');\n\n        return {\n          key,\n          id: _id,\n          subject,\n          description,\n          type,\n          date: moment(due_date).format('LL'),\n          time: moment(due_time).format('LT'),\n          appointment,\n        };\n      });\n      this.setState({\n        isLoading: false,\n        data: convertedData\n      });\n    }\n  }\n\n  onEdit = async (data) => {\n    const { form } = this.props;\n    this.props.form.setFieldsValue({\n      subject: 'ok'\n    });\n\n    this.setState({\n      isUpdate: true,\n    });\n  }\n\n  deleteHomework = async (id) => {\n    const { statusCode } = await request.remove(api.url.homework, id);\n    const message = statusCode == 200 ? 'Send Message: Success' : 'Send Message: Fail';\n\n    notification.open({\n      message: message\n    });\n\n    this.getHomework();\n  }\n\n  render() {\n    const { form } = this.props;\n    const { data, isLoading, isUpdate } = this.state;\n    return (\n      <Wrapper>\n        <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\n          <Layout style={{ background: '#fff' }}>\n            <HomeworkForm\n              form={form}\n              onSubmit={this.addHomework}\n              onUpdate={this.updateHomework}\n              isUpdate={isUpdate}\n            />\n            <TableItems\n              isLoading={isLoading}\n              data={data}\n              onEdit={this.updateHomework}\n              onDelete={this.deleteHomework}\n            />\n          </Layout>\n        </Content>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Form.create()(Home);\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;;;;;AAUA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAaA;;;;;AAEA;;;;;;;;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;AAUA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;AA3EA;AACA;AACA;;;AAmFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AAnHA;AACA;AAqHA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}